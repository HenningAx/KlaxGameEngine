<UserControl x:Class="KlaxEditor.Views.EntityBuilderInspector"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:KlaxEditor.Views"
             xmlns:vm="clr-namespace:KlaxEditor.ViewModels.EditorWindows"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:be="clr-namespace:KlaxEditor.Behaviors"
             xmlns:usercontrols="clr-namespace:KlaxEditor.UserControls"
             xmlns:inspectorControls="clr-namespace:KlaxEditor.UserControls.InspectorControls"
             xmlns:conv="clr-namespace:KlaxEditor.Converters"
             xmlns:klaxScripts="clr-namespace:KlaxCore.KlaxScript;assembly=KlaxCore"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="500">

	<UserControl.Resources>
		<Thickness x:Key="InspectorElementMargin">0,4,0,0</Thickness>

		<Style x:Key="InvisibleListViewItem" TargetType="{x:Type ListViewItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Focusable" Value="False" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListViewItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="AddComponentEntryItem" TargetType="{x:Type ListViewItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Focusable" Value="False" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListViewItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource LightGray}"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate x:Key="EventGraphsHeaderTemplate">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBlock Text="Event Graphs" VerticalAlignment="Center"/>
				<ToggleButton Content="Add Event Graph" x:Name="ToggleAddButton" FontSize="11" Grid.Column="1" Style="{StaticResource AddToggleButtonStyle}" Padding="3" />
				<Popup MouseDown="AddGraphPopup_OnMouseDown" Grid.Column="1" StaysOpen="False" IsOpen="{Binding ElementName=ToggleAddButton, Path=IsChecked, Mode=TwoWay}" Placement="Bottom" PlacementTarget="{Binding ElementName=ToggleAddButton}">
					<ItemsControl ItemsSource="{Binding DataContext.PossibleEvents, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}" Background="{StaticResource DarkGray}">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type vm:CKlaxEventEntryViewmodel}">
								<Border Style="{StaticResource HoverBorder}">
									<i:Interaction.Behaviors>
										<be:EventToCommandBehavior Event="MouseDown" Command="{Binding MouseDownCommand}" PassArguments="True"/>
									</i:Interaction.Behaviors>
									<TextBlock Text="{Binding Name}" />
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Popup>
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="InterfaceGraphsHeaderTemplate">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBlock Text="Interface Graphs" VerticalAlignment="Center"/>
				<ToggleButton Content="Implement Interface" x:Name="ToggleAddButton" FontSize="11" Grid.Column="1" Style="{StaticResource AddToggleButtonStyle}" Padding="3" />
				<Popup MouseDown="AddGraphPopup_OnMouseDown" Grid.Column="1" StaysOpen="False" IsOpen="{Binding ElementName=ToggleAddButton, Path=IsChecked, Mode=TwoWay}" Placement="Bottom" PlacementTarget="{Binding ElementName=ToggleAddButton}">
					<ItemsControl ItemsSource="{Binding DataContext.PossibleInterfaceFunctions, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}" Background="{StaticResource DarkGray}">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type vm:CKlaxEventEntryViewmodel}">
								<Border Style="{StaticResource HoverBorder}">
									<i:Interaction.Behaviors>
										<be:EventToCommandBehavior Event="MouseDown" Command="{Binding MouseDownCommand}" PassArguments="True"/>
									</i:Interaction.Behaviors>
									<TextBlock Text="{Binding Name}" />
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Popup>
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="VariableInfoDataTemplate">
			<Expander Style="{StaticResource KlaxVariableExpanderStyle}">
				<Expander.ContextMenu>
					<ContextMenu>
						<MenuItem Header="Delete" Command="{Binding DeleteCommand}" />
					</ContextMenu>
				</Expander.ContextMenu>
				<Expander.Header>
					<Grid HorizontalAlignment="Stretch">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<inspectorControls:StandaloneInspectorControl Grid.Column="0" VerticalAlignment="Center" MinWidth="125" InspectorControlType="{x:Type klaxScripts:CKlaxScriptTypeInfo}" Value="{Binding KlaxType, Mode=TwoWay}" HorizontalAlignment="Stretch" />
						<Border Grid.Column="1" Style="{StaticResource HoverBorder}" Margin="0,2" MouseDown="KlaxVariableEntry_OnMouseDown" HorizontalAlignment="Stretch">
							<usercontrols:EditableTextBlock AlwaysHandleClick="True" Margin="8, 0, 0, 0" EditText="{Binding Name, Mode=TwoWay}" Label="{Binding Name, Mode=TwoWay}" HorizontalContentAlignment="Left" MinWidth="100" />
						</Border>
					</Grid>
				</Expander.Header>
				<inspectorControls:PropertyInspector NameColumnWidth="90" DispatchSetter="False" Properties="{Binding Properties}" UseSimpleCategoryDisplay="True"></inspectorControls:PropertyInspector>
			</Expander>
		</DataTemplate>
		<DataTemplate x:Key="ScriptGraphTemplate" DataType="{x:Type vm:CScriptEventGraphEntryViewmodel}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="24" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Button Grid.Column="0" Style="{StaticResource DialogWindowButton}" Command="{Binding DeleteCommand}" Width="24" Height="24" VerticalAlignment="Center" BorderBrush="#2A2A2C">
					<Image Source="pack://application:,,,/Resources/Images/Windows/fa_close.png" Width="10" Height="10" />
				</Button>
				<Border Margin="4, 0, 0, 0" Padding="4" Style="{StaticResource HoverBorder}" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="1">
					<Border.InputBindings>
						<MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DoubleClickCommand}" />
					</Border.InputBindings>
					<usercontrols:EditableTextBlock ToolTip="{Binding Name}" EditText="{Binding Name, Mode=TwoWay}" Label="{Binding Name, Mode=TwoWay}" HorizontalAlignment="Left" HorizontalContentAlignment="Left" MaxWidth="300" />
				</Border>
			</Grid>
		</DataTemplate>

	</UserControl.Resources>

	<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" PreviewMouseMove="OnPreviewMouseMoveDrag">
		<Grid Focusable="True" Name="MainGrid">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="24" MaxHeight="24" />
				<RowDefinition Height="50" MaxHeight="50" />
				<RowDefinition MinHeight="25" Height="130" />
				<RowDefinition MinHeight="25" Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" Margin="4" Text="{Binding AssetName}" FontSize="20" FontWeight="Bold"/>

			<StackPanel Margin="10, 5, 10, 0" Orientation="Horizontal" Height="20" Grid.Row="1">
				<TextBox Style="{StaticResource InputElementTextBox}" MinWidth="200" Name="EntityNameBox" GotFocus="EntityNameBox_GotFocus" LostFocus="EntityNameBox_LostFocus" PreviewKeyDown="EntityNameBox_PreviewKeyDown" Text="{Binding EntityName, Mode=OneWay}" />
			</StackPanel>

			<StackPanel Orientation="Horizontal" Margin="10, 0, 10, 0" Grid.Row="2">
				<Button HorizontalAlignment="Stretch" Height="30" VerticalAlignment="Center" Command="{Binding ToggleAddComponentMenuCommand}" Style="{DynamicResource AddComponentButtonStyle}">
					<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
						<TextBlock Text="+Add Component" FontSize="14" Foreground="White">
							<TextBlock.Effect>
								<DropShadowEffect BlurRadius="2" Opacity="1" ShadowDepth="2" />
							</TextBlock.Effect>
						</TextBlock>
						<Path Visibility="{Binding AddComponentMenuOpen, Converter={StaticResource BoolToVisibility_TrueCollapsed_FalseVisible}}" x:Name="OpenAddComponentArrow" Margin="6, 0" VerticalAlignment="Center" Fill="White" Data="M0,3 L12,3 L6,9 z">
							<Path.Effect>
								<DropShadowEffect BlurRadius="2" Opacity="1" ShadowDepth="2" />
							</Path.Effect>
						</Path>
						<Path Visibility="{Binding AddComponentMenuOpen, Converter={StaticResource BoolToVisibility_TrueVisible_FalseCollapsed}}" x:Name="CloseAddComponentArrow" Margin="6, 0" VerticalAlignment="Center" Fill="White" Data="M6,3 L12,9 L0,9 z">
							<Path.Effect>
								<DropShadowEffect BlurRadius="2" Opacity="1" ShadowDepth="2" />
							</Path.Effect>
						</Path>
					</StackPanel>
				</Button>

				<Button Margin="10, 0, 0, 0" HorizontalAlignment="Stretch" Height="30" Width="30" VerticalAlignment="Center" Command="{Binding ToggleEntityCommandsMenuCommand}" Style="{DynamicResource EntityCommandsButtonStyle}">
					<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
						<Image Source="pack://application:,,,/Resources/Images/Windows/fa_cog.png" Width="16" Height="16">
							<Image.Effect>
								<DropShadowEffect BlurRadius="2" Opacity="1" ShadowDepth="2" />
							</Image.Effect>
						</Image>
					</StackPanel>
				</Button>

				<Popup Margin="10, 10, 0, 0" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="220" Height="Auto" IsOpen="{Binding AddComponentMenuOpen}" StaysOpen="False">
					<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
						<ListView ScrollViewer.CanContentScroll="False" ItemsSource="{Binding AddComponentMenuCategories}" Background="{StaticResource DarkGray}" ItemContainerStyle="{StaticResource InvisibleListViewItem}" MaxHeight="400">
							<ListView.ItemTemplate>
								<DataTemplate>
									<StackPanel Orientation="Vertical">
										<TextBlock Text="{Binding Name}" FontSize="10" Foreground="LightGray" />
										<ListView ItemContainerStyle="{StaticResource AddComponentEntryItem}" ItemsSource="{Binding ComponentTypes}" Background="{StaticResource DarkGray}" BorderThickness="0">
											<ListView.ItemTemplate>
												<DataTemplate>
													<Button Background="Transparent" Command="{Binding DataContext.AddComponentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView},AncestorLevel=2}}" CommandParameter="{Binding Type}" Padding="0" BorderThickness="0">
														<TextBlock Text="{Binding Name}" FontSize="12" />
													</Button>
												</DataTemplate>
											</ListView.ItemTemplate>
										</ListView>
									</StackPanel>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
					</ScrollViewer>
				</Popup>

				<Popup Margin="10, 10, 0, 0" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="220" Height="Auto" IsOpen="{Binding EntityCommandsMenuOpen}" StaysOpen="False">
					<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
						<ListView ScrollViewer.CanContentScroll="False" ItemsSource="{Binding EntityCommands}" Background="{StaticResource DarkGray}" ItemContainerStyle="{StaticResource AddComponentEntryItem}" MaxHeight="400">
							<ListView.ItemTemplate>
								<DataTemplate>
									<Button Background="Transparent" Command="{Binding Command}" Padding="0" BorderThickness="0">
										<TextBlock Text="{Binding Name}" FontSize="12" />
									</Button>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
					</ScrollViewer>
				</Popup>
			</StackPanel>

			<Border Margin="8" Grid.Row="3" CornerRadius="3" BorderThickness="0" Background="#3E3E3E">
				<StackPanel Orientation="Vertical">
					<TreeView ItemContainerStyle="{StaticResource StretchedTreeViewItemStyle}" HorizontalContentAlignment="Left" ScrollViewer.CanContentScroll="False" Name="EntityDisplay" ItemsSource="{Binding EntityInfo}" Background="Transparent" BorderThickness="0">
						<TreeView.ItemTemplate>
							<HierarchicalDataTemplate>
								<Border HorizontalAlignment="Stretch">
									<TextBlock HorizontalAlignment="Left" Text="{Binding Name}" />
								</Border>
							</HierarchicalDataTemplate>
						</TreeView.ItemTemplate>
					</TreeView>
					<Separator Margin="8, 2, 8, 2" />
					<TreeView  ItemContainerStyle="{StaticResource StretchedTreeViewItemStyle}" HorizontalContentAlignment="Stretch" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.CanContentScroll="False" Name="SceneComponentList" ItemsSource="{Binding SceneComponents}" Background="Transparent" BorderThickness="0" SelectedItemChanged="TreeView_SelectedItemChanged">
						<TreeView.ItemTemplate>
							<HierarchicalDataTemplate ItemsSource="{Binding Children}">
								<Border HorizontalAlignment="Stretch" x:Name="SceneComponentEntry" PreviewMouseLeftButtonDown="SceneComponentEntry_PreviewMouseLeftButtonDown" AllowDrop="True">
									<i:Interaction.Behaviors>
										<be:EventToCommandBehavior Event="DragEnter" Command="{Binding DragEnterCommand}" PassArguments="True" />
										<be:EventToCommandBehavior Event="DragOver" Command="{Binding DragOverCommand}" PassArguments="True" />
										<be:EventToCommandBehavior Event="Drop" Command="{Binding DropCommand}" PassArguments="True" />
									</i:Interaction.Behaviors>
									<TextBlock AllowDrop="True" Text="{Binding Name}">
										<TextBlock.ContextMenu>
											<ContextMenu>
												<MenuItem Header="Make Root" Command="{Binding MakeRootCommand}" />
												<MenuItem Header="Delete" Command="{Binding DeleteComponentCommand}" />
											</ContextMenu>
										</TextBlock.ContextMenu>
									</TextBlock>
								</Border>
							</HierarchicalDataTemplate>
						</TreeView.ItemTemplate>
					</TreeView>
					<Separator Margin="8, 2, 8, 2" />
					<TreeView ItemContainerStyle="{StaticResource StretchedTreeViewItemStyle}" HorizontalContentAlignment="Stretch"  VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.CanContentScroll="False" Name="EntityComponentList" ItemsSource="{Binding EntityComponents}" Background="Transparent" BorderThickness="0" SelectedItemChanged="TreeView_SelectedItemChanged">
						<TreeView.ItemTemplate>
							<HierarchicalDataTemplate>
								<Border HorizontalAlignment="Stretch" PreviewMouseLeftButtonDown="EntityComponentEntry_PreviewMouseLeftButtonDown">
									<TextBlock Text="{Binding Name}" HorizontalAlignment="Left" >
										<TextBlock.ContextMenu>
											<ContextMenu>
												<MenuItem Header="Delete" Command="{Binding DeleteComponentCommand}" />
											</ContextMenu>
										</TextBlock.ContextMenu>
									</TextBlock>
								</Border>
							</HierarchicalDataTemplate>
						</TreeView.ItemTemplate>
					</TreeView>
				</StackPanel>
			</Border>
			<GridSplitter Grid.Row="3" Height="3"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Bottom"
                  Background="#3E3E3E"
                  Margin="5, 0, 5, 0"/>

			<inspectorControls:PropertyInspector DispatchSetter="False" x:Name="PropertyInspector" Grid.Row="4" Margin="8, 8, 8, 8" />

			<GridSplitter Grid.Row="4" Height="3"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Bottom"
                  Background="#3E3E3E"
                  Margin="5, 0, 5, 0"/>

			<StackPanel Orientation="Vertical" Grid.Row="5" Margin="8">
				<Expander IsExpanded="True" Style="{StaticResource ThinExpanderStyle}" HeaderTemplate="{StaticResource EventGraphsHeaderTemplate}">
					<ItemsControl Name="EventGraphs" ItemsSource="{Binding EventGraphs}" Background="Transparent" ItemTemplate="{StaticResource ScriptGraphTemplate}" />
				</Expander>
				<Expander IsExpanded="True" Style="{StaticResource ThinExpanderStyle}" HeaderTemplate="{StaticResource InterfaceGraphsHeaderTemplate}">
					<ItemsControl Name="InterfaceGraphs" ItemsSource="{Binding InterfaceGraphs}" Background="Transparent" ItemTemplate="{StaticResource ScriptGraphTemplate}" />
				</Expander>
				<Expander IsExpanded="True" Style="{StaticResource ThinExpanderStyle}">
					<Expander.Header>
						<usercontrols:CommandHeaderControl Text="Function Graphs" ButtonStyle="{StaticResource AddButtonStyle}" Command="{Binding AddFunctionGraphCommand}"/>
					</Expander.Header>
					<ItemsControl Name="FunctionGraphs" ItemsSource="{Binding FunctionGraphs}" Background="Transparent" ItemTemplate="{StaticResource ScriptGraphTemplate}" />
				</Expander>
				<Expander IsExpanded="True" Style="{StaticResource ThinExpanderStyle}" DataContext="{Binding FunctionEditor}" Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" Header="Edit Function">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Border Grid.Row="0" BorderThickness="2" BorderBrush="{StaticResource LightGray}" CornerRadius="3" Padding="2">
							<StackPanel>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Column="0" Text="Input Parameters" Margin="2" VerticalAlignment="Center"/>
									<Button Style="{StaticResource RoundedButtonStyle}" Grid.Column="1" Margin="4,0,0,0" Content="Add Input" Padding="3" FontSize="12" Command="{Binding AddInputCommand}"/>
								</Grid>
								<ItemsControl ItemsSource="{Binding InputParameters}" Background="Transparent" ItemTemplate="{StaticResource VariableInfoDataTemplate}" />
							</StackPanel>
						</Border>
						<Border Margin="0,3,0,0" Grid.Row="1" BorderThickness="2" BorderBrush="{StaticResource LightGray}" CornerRadius="3" Padding="2">
							<StackPanel>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Column="0" Text="Output Parameters" Margin="2" VerticalAlignment="Center"/>
									<Button Style="{StaticResource RoundedButtonStyle}" Grid.Column="1" Margin="4,0,0,0" Content="Add Output" Padding="3" FontSize="12" Command="{Binding AddOutputCommand}"/>
								</Grid>
								<ItemsControl ItemsSource="{Binding OutputParameters}" Background="Transparent" ItemTemplate="{StaticResource VariableInfoDataTemplate}" />
							</StackPanel>
						</Border>
					</Grid>
				</Expander>
				<Expander IsExpanded="True" Style="{StaticResource ThinExpanderStyle}">
					<Expander.Header>
						<usercontrols:CommandHeaderControl Text="Variables" ButtonStyle="{StaticResource AddButtonStyle}" Command="{Binding CreateVariableCommand}"/>
					</Expander.Header>
					<ItemsControl Name="Variables" ItemsSource="{Binding EntityVariables}" Background="Transparent" BorderThickness="0" ItemTemplate="{StaticResource VariableInfoDataTemplate}"/>
				</Expander>
				<Expander IsExpanded="True" Style="{DynamicResource ThinExpanderStyle}">
					<Expander.Header>
						<usercontrols:CommandHeaderControl Text="Local Variables" ButtonStyle="{StaticResource AddButtonStyle}" Command="{Binding CreateLocalVariableCommand}"/>
					</Expander.Header>
					<ItemsControl Name="LocalVariables" ItemsSource="{Binding LocalVariables}" Background="Transparent" BorderThickness="0" ItemTemplate="{StaticResource VariableInfoDataTemplate}" />
				</Expander>
				<Expander Style="{StaticResource ThinExpanderStyle}">
					<Expander.Header>
						<usercontrols:CommandHeaderControl Text="Included Interfaces" ButtonStyle="{StaticResource AddButtonStyle}" Command="{Binding AddInterfaceIncludeCommand}"/>
					</Expander.Header>
					<ItemsControl Name="IncludedInterfaces" ItemsSource="{Binding IncludedInterfaces}">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type vm:CIncludedInterfaceEntry}">
								<inspectorControls:StandaloneInspectorControl Value="{Binding InterfaceAsset, Mode=TwoWay}" InspectorControlType="{Binding ControlType}">
									<inspectorControls:StandaloneInspectorControl.ContextMenu>
										<ContextMenu>
											<MenuItem Header="Delete" Command="{Binding DeleteCommand}" />
										</ContextMenu>
									</inspectorControls:StandaloneInspectorControl.ContextMenu>
								</inspectorControls:StandaloneInspectorControl>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Expander>
			</StackPanel>
		</Grid>
	</ScrollViewer>
</UserControl>
