<Window x:Class="KlaxEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:local="clr-namespace:KlaxEditor"
        xmlns:themes="clr-namespace:KlaxEditor.Themes"
        xmlns:controls="clr-namespace:KlaxEditor.UserControls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        x:Name="mainWindow"
        Title="{Binding Title}" Height="720" Width="1280"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        Background="Transparent">

    <Window.Style>
        <Style>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
            CornerRadius="2"
            GlassFrameThickness="0"
            NonClientFrameEdges="None"
            ResizeBorderThickness="3"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>

    <Window.Resources>
        <avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Z" Modifiers="Control" Command="{Binding UndoCommand}"/>
        <KeyBinding Key="Y" Modifiers="Control" Command="{Binding RedoCommand}"/>
        <KeyBinding Key="G" Modifiers="Control" Command="{Binding PlayGameCommand}"/>
        <KeyBinding Key="Esc" Command="{Binding StopGameCommand}"/>
        <KeyBinding Key="F1" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="0" />
        <KeyBinding Key="F2" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="1" />
        <KeyBinding Key="F3" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="2" />
        <KeyBinding Key="F4" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="3" />
        <KeyBinding Key="F5" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="4" />
        <KeyBinding Key="F6" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="5" />
        <KeyBinding Key="F7" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="6" />
        <KeyBinding Key="F8" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="7" />
        <KeyBinding Key="F9" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="8" />
        <KeyBinding Key="F10" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="9" />
        <KeyBinding Key="F11" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="10" />
        <KeyBinding Key="F12" Command="{Binding LayoutManager.LoadLayoutAtIndexCommand}" CommandParameter="11" />
    </Window.InputBindings>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LayoutManager.LoadLayoutCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding LayoutManager.SaveLayoutCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Border CornerRadius="0, 0, 7, 7" Padding="4" Background="#1C1C1C">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*"  />
            </Grid.RowDefinitions>

            <controls:IntegratedTitleBar Grid.Row="0" DisplayApplicationIcon="True" />

            <Menu Grid.Row="1" Foreground="White" BorderThickness="0, 1, 0, 0" BorderBrush="#565656">
                <Menu.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#292929" Offset="0" />
                        <GradientStop Color="#191919" Offset="0.5" />
                        <GradientStop Color="#202020" Offset="1.0" />
                    </LinearGradientBrush>
                </Menu.Background>
                <Menu.Resources>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource KlaxMainMenuStyle}" />
                </Menu.Resources>
                <MenuItem Header="File">
                    <MenuItem Header="New Level" Command="{Binding NewLevelCommand}"/>
                    <Separator />
                    <MenuItem Header="Save Level" Command="{Binding SaveLevelCommand}"/>
                    <MenuItem Header="Save as New" Command="{Binding SaveLevelAsCommand}"/>
                    <Separator />
                    <MenuItem Header="Close" Command="{Binding CloseCommand}"/>
                </MenuItem>
                <MenuItem Header="Edit">
                    <MenuItem Header="Undo" InputGestureText="Ctrl+Z" Command="{Binding UndoCommand}"/>
                    <MenuItem Header="Redo" InputGestureText="Ctrl+Y" Command="{Binding RedoCommand}"/>
                </MenuItem>
                <MenuItem Header="Tools" Name="ToolsMenu">
                </MenuItem>
                <MenuItem Header="Layout">
                    <MenuItem Header="Load" ItemsSource="{Binding LayoutManager.LayoutPresets}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource KlaxMainMenuStyle}">
                                <Setter Property="Header" Value="{Binding Name}" />
                                <Setter Property="Command" Value="{Binding Load}" />
                                <Setter Property="InputGestureText" Value="{Binding InputGesture}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Header="Save..." Command="{Binding LayoutManager.SaveLayoutAsCommand}"/>
                    <Separator />
                </MenuItem>
                <MenuItem Header="Entity">
                    <MenuItem Header="Create">
                        <MenuItem Header="Empty" Command="{Binding SpawnEmptyEntity}"/>
                        <MenuItem Header="Cube" Command="{Binding SpawnCubeEntity}"/>
                        <MenuItem Header="Sphere" Command="{Binding SpawnSphereEntity}"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Game">
                    <MenuItem Header="Play" Command="{Binding PlayGameCommand}" InputGestureText="Ctrl+G" />
                    <MenuItem Header="Stop" Command="{Binding StopGameCommand}" InputGestureText="Esc" />
                </MenuItem>
            </Menu>

            <avalonDock:DockingManager x:Name="dockManager" 
                                   AnchorablesSource="{Binding Tools}"
                                   Grid.Row="2">


                <avalonDock:DockingManager.Theme>
                    <themes:DarkTheme/>
                </avalonDock:DockingManager.Theme>

                <avalonDock:DockingManager.LayoutItemTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding Content}"/>
                    </DataTemplate>
                </avalonDock:DockingManager.LayoutItemTemplate>

                <avalonDock:DockingManager.LayoutItemContainerStyle>
                    <Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
                        <Setter Property="Title" Value="{Binding Model.Title}"/>
                        <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                        <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                        <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                        <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                        <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                        <Setter Property="CanClose" Value="False" />
                    </Style>
                </avalonDock:DockingManager.LayoutItemContainerStyle>

                <avalonDock:DockingManager.LayoutUpdateStrategy>
                    <local:CLayoutInitializer/>
                </avalonDock:DockingManager.LayoutUpdateStrategy>

                <avalonDock:LayoutRoot>
                    <avalonDock:LayoutPanel Orientation="Vertical">
                        <avalonDock:LayoutAnchorablePane Name="ToolsPane" DockHeight="150">
                        </avalonDock:LayoutAnchorablePane>
                    </avalonDock:LayoutPanel>
                </avalonDock:LayoutRoot>
            </avalonDock:DockingManager>

        </Grid>
    </Border>
</Window>
